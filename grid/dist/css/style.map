{
	"version": 3,
	"file": "../../editable/sass/style.css",
	"sources": [
		"../../editable/sass/style.scss",
		"../../node_modules/sass-rem/_rem.scss",
		"../../editable/sass/_mixins.scss",
		"../../editable/sass/_reset.scss"
	],
	"sourcesContent": [
		"@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800');\r\n@import \"../../node_modules/sass-rem/_rem.scss\";\r\n@import \"_mixins.scss\";\r\n@import \"_reset.scss\";\r\nbody{\r\n    color : red;\r\n    p{\r\n        font-size : 12px;\r\n    }\r\n}\r\n.container{\r\n    width : 100vw;\r\n    height : 100vh;\r\n    @include prefix(display, grid);\r\n    grid-template-columns: 300px 1fr 1fr;\r\n    grid-template-rows: 100px auto;\r\n    grid-column-gap : 0.5rem;\r\n    grid-template-areas:\r\n        \"header header header\"\r\n        \"menu content content\";\r\n    .header , .content, .menu {\r\n        padding: rem(30px);\r\n    }\r\n    .content{\r\n        grid-area : content;\r\n        background : grey;\r\n    }\r\n    .menu{\r\n        grid-area : menu;\r\n        background : rgb(98, 230, 24);\r\n    }\r\n    .header{\r\n        grid-area : header;\r\n        background : rgb(244, 244, 244);\r\n        .containerHeader{\r\n            display: grid;\r\n            grid-template-columns: 400px 1fr;\r\n            grid-template-rows: auto auto;\r\n            grid-column-gap : 0.5rem;\r\n            a{\r\n                &.linkLogo{\r\n                    @include my-font(35px, 800, 'Open Sans');\r\n                    color : rgb(26, 29, 28);\r\n                    text-decoration : none;\r\n                    letter-spacing : 0.05em;\r\n                }\r\n            }\r\n            form{\r\n                display : flex;\r\n                flex-direction: row;\r\n                flex-wrap: nowrap;\r\n                justify-content : flex-start;\r\n                align-items: center;\r\n                input[type=\"text\"]{\r\n                    border : 1px solid rgb(107, 107, 107);\r\n                    padding : rem(0 10px);\r\n                    height : rem(40px);\r\n                    width : rem(300px);\r\n                    &::placeholder{\r\n                        @include my-font(14px, 400, 'Open Sans');\r\n                        color : rgb(5, 4, 1);\r\n                    }\r\n                }\r\n                button{\r\n                    padding : rem(0px 10px);\r\n                    margin-left : rem(4px);\r\n                    cursor : pointer;\r\n                    width: rem(100px);\r\n                    height : rem(42px);\r\n                    @include my-font(18px, 700, 'Open Sans');\r\n                    @include prefix(transition,0.5s all ease);\r\n                }\r\n                a{\r\n                    @include my-font(14px, 700, 'Open Sans');\r\n                    color : rgb(12, 76, 219);\r\n                    text-decoration: none;\r\n                    margin-left : rem(8px);\r\n                    @include prefix(transition,0.5s all ease);\r\n                    &:hover{\r\n                        color : rgb(41, 126, 97);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
		"$rem-baseline: 16px !default;\n$rem-fallback: false !default;\n$rem-px-only: false !default;\n\n@function rem-separator($list, $separator: false) {\n  @if $separator == \"comma\" or $separator == \"space\" {\n    @return append($list, null, $separator);\n  } \n  \n  @if function-exists(\"list-separator\") == true {\n    @return list-separator($list);\n  }\n\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n  $test-list: ();\n  @each $item in $list {\n    $test-list: append($test-list, $item, space);\n  }\n\n  @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n  font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n  $result: ();\n  $separator: rem-separator($values);\n  \n  @each $value in $values {\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n      $result: append($result, $value / 1rem * $rem-baseline + 0px, $separator);\n    } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n      $result: append($result, $value / $rem-baseline + 0rem, $separator);\n    } @else if type-of($value) == \"list\" {\n      $value-separator: rem-separator($value);\n      $value: rem-convert($to, $value...);\n      $value: rem-separator($value, $value-separator);\n      $result: append($result, $value, $separator);\n    } @else {\n      $result: append($result, $value, $separator);\n    }\n  }\n\n  @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n  @if $rem-px-only {\n    @return rem-convert(px, $values...);\n  } @else {\n    @return rem-convert(rem, $values...);\n  }\n}\n\n@mixin rem($properties, $values...) {\n  @if type-of($properties) == \"map\" {\n    @each $property in map-keys($properties) {\n      @include rem($property, map-get($properties, $property));\n    }\n  } @else {\n    @each $property in $properties {\n      @if $rem-fallback or $rem-px-only {\n        #{$property}: rem-convert(px, $values...);\n      }\n      @if not $rem-px-only {\n        #{$property}: rem-convert(rem, $values...);\n      }\n    }\n  }\n}\n",
		"$prefixes: \"webkit\", \"moz\", \"ms\", \"o\", \"none\";\r\n\r\n@mixin prefix($property, $arguments) {\r\n @each $prefix in $prefixes {\r\n   @if $prefix == \"none\" {\r\n     #{$property}: $arguments;\r\n   } @else {\r\n     -#{$prefix}-#{$property}: $arguments;\r\n   }\r\n }\r\n}\r\n\r\n@mixin my-font($size, $bold, $family) {\r\n  font-size: $size;\r\n  font-weight : $bold;\r\n  font-family : $family;\r\n}\r\n",
		"/* http://meyerweb.com/eric/tools/css/reset/\r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n"
	],
	"mappings": "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",
	"names": []
}